openapi: 3.0.0
info:
  title: My Mini-Bank project
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/
    description: Dev server
tags:
  - name: Login
    description: Login operations
  - name: User
    description: User operations
  - name: Admin
    description: Admin operations
paths:
  /admin/usersList:
    get:
      summary: Method that displays a list of all users
      tags:
        - Admin
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          description: Number page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of elements
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: Successfully getting all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#UserVO'
        '404':
          description: Not found
  /admin/accountsList:
    get:
      summary: Method that displays a list of all accounts
      tags:
        - Admin
      operationId: getAllAccounts
      parameters:
        - name: page
          in: query
          description: Number page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of elements
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: Successfully getting all accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#AccountVO'
        '404':
          description: Not found
  /admin/transactionsList:
    get:
      summary: Method that displays a list of all transactions
      tags:
        - Admin
      operationId: getAllTransactions
      parameters:
        - name: page
          in: query
          description: Number page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of elements
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: Successfully getting all transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#TransactionVO'
        '404':
          description: Not found
  /api/admin/getUser/{user_id}:
    get:
      summary: Method that returns a user by id
      tags:
        - Admin
      operationId: getUserById
      parameters:
        - in: path
          name: user_id
          required: true
          description: record id
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Successfully getting user
          content:
            application/json:
              schema:
                $ref: '#UserVO'
        '404':
          description: Not found
  /api/admin/getAccount/{account_id}:
    get:
      summary: Method that returns a account by id
      tags:
        - Admin
      operationId: getAccountById
      parameters:
        - in: path
          name: account_id
          required: true
          description: record id
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Successfully getting account
          content:
            application/json:
              schema:
                $ref: '$AccountVO'
        '404':
          description: Not found
    patch:
      summary: Update account status
      tags:
        - Admin
      operationId: updateStatusAcc
      parameters:
        - in: path
          name: account_id
          required: true
          description: record id
          schema:
            type: integer
            format: int64
          example: 1
      requestBody:
        description: update status
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - ACTIVE
                    - BLOCK
                    - DELETE
      responses:
        '200':
          description: Successfully updated account
          content:
            application/json:
              schema:
                $ref: '#AccountVO'
        '400':
          description: Bad request
  /api/admin/getTransaction/{transaction_id}:
    get:
      summary: Method that returns a transaction by id
      tags:
        - Admin
      operationId: getTransactionById
      parameters:
        - in: path
          name: transaction_id
          required: true
          description: record id
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Successfully getting transaction
          content:
            application/json:
              schema:
                $ref: '#TransactionVO'
        '404':
          description: Not found
  /admin/createAccount:
    post:
      summary: Create new Account
      tags:
        - Admin
      operationId: createAccount
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#AccountVO'
      responses:
        '200':
          description: Successfully created account
          content:
            application/json:
              schema:
                $ref: '#AccountVO'
        '400':
          description: Bad request
  /api/login/log:
    post:
      summary: Login
      tags:
        - Login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successfully login
          content:
            application/json:
              schema:
                $ref: '#UserVO'
        '400':
          description: Bad request
  /api/login/registration:
    post:
      summary: Registration
      tags:
        - Login
      operationId: registration
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: User
                lastName:
                  type: string
                  example: Userovicz
                country:
                  type: string
                  example: POLAND
                phoneNumber:
                  type: integer
                  format: int64
                  example: 485751354
                email:
                  type: string
                  example: user@mail.com
                password:
                  type: string
                  example: user
      responses:
        '200':
          description: Successfully login
          content:
            application/json:
              schema:
                $ref: '#UserVO'
        '400':
          description: Bad request
  /user/{user_id}:
    get:
      summary: Method that returns a account by id
      tags:
        - User
      operationId: getMyAccountList
      parameters:
        - name: page
          in: query
          description: Number page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of elements
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: user_id
          in: path
          required: true
          description: User Id
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Successfully getting account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#AccountVO'
        '404':
          description: Not found
  /user/{account_id}:
    get:
      summary: Method that returns a transaction by account id
      tags:
        - User
      operationId: getMyTransactionList
      parameters:
        - name: page
          in: query
          description: Number page
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of elements
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: account_id
          in: path
          required: true
          description: Account Id
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Successfully getting transaction
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#TransactionVO'
        '404':
          description: Not found
    post:
      summary: Create Transaction
      tags:
        - User
      operationId: createTransaction
      parameters:
        - name: account_id
          in: path
          description: Account Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                accountFrom:
                  type: integer
                  format: int64
                  example: 1
                accountTo:
                  type: integer
                  format: int64
                  example: 2
                amount:
                  type: number
                  format: double
                  example: 123.00
                description:
                  type: string
                  example: transfer
      responses:
        '200':
          description: Successfully create transaction
          content:
            application/json:
              schema:
                $ref: '#TransactionVO'
        '404':
          description: Bad request

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
